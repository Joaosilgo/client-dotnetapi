{"version":3,"sources":["imgs/React-icon.svg","Components/Hero.js","Components/Card.js","Components/Loader.js","Business.js","PostRequestHooks.js","App.js","reportWebVitals.js","serviceWorker.js","SignIn.js","routes.js","index.js"],"names":["navigation","name","to","Hero","className","fill","viewBox","preserveAspectRatio","aria-hidden","points","open","aria-label","alt","src","logo","Button","map","item","show","as","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Panel","focus","static","Card","props","href","data","category","description","substring","Loader","circleCommonClasses","Business","useState","hasError","setErrors","business","setBusiness","loading","setLoading","a","fetch","json","then","res","catch","err","useEffect","fetchData","Cards","index","PostRequestHooks","categories","setCategories","axios","get","response","scope","id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","error","SignIn","handleSubmit","e","preventDefault","method","headers","body","username","password","Credential","mode","onSubmit","this","type","defaultValue","htmlFor","autoComplete","required","placeholder","onChange","target","value","Component","Routes","exact","path","component","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e16e8675.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/React-icon.3adc4d15.svg\";","/* This example requires Tailwind CSS v2.0+ */\r\nimport { Fragment } from 'react'\r\nimport { Popover, Transition } from '@headlessui/react'\r\nimport { MenuIcon, XIcon } from '@heroicons/react/outline'\r\nimport logo from '../imgs/React-icon.svg';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst navigation = [\r\n  { name: 'Something', to: '/' },\r\n  { name: 'Categories', to: '/Categories' },\r\n  { name: 'Business', to: '/Categories' },\r\n  \r\n\r\n]\r\n\r\nexport default function Hero() {\r\n  return (\r\n    <div className=\"relative bg-white overflow-hidden\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        <div className=\"relative z-10 pb-8 bg-white sm:pb-16 md:pb-20 lg:max-w-2xl lg:w-full lg:pb-28 xl:pb-32\">\r\n          <svg\r\n            className=\"hidden lg:block absolute right-0 inset-y-0 h-full w-48 text-white transform translate-x-1/2\"\r\n            fill=\"currentColor\"\r\n            viewBox=\"0 0 100 100\"\r\n            preserveAspectRatio=\"none\"\r\n            aria-hidden=\"true\"\r\n          >\r\n            <polygon points=\"50,0 100,0 50,100 0,100\" />\r\n          </svg>\r\n\r\n          <Popover>\r\n            {({ open }) => (\r\n              <>\r\n                <div className=\"relative pt-6 px-4 sm:px-6 lg:px-8\">\r\n                  <nav\r\n                    className=\"relative flex items-center justify-between sm:h-10 lg:justify-start\"\r\n                    aria-label=\"Global\"\r\n                  >\r\n                    <div className=\"flex items-center flex-grow flex-shrink-0 lg:flex-grow-0\">\r\n                      <div className=\"flex items-center justify-between w-full md:w-auto\">\r\n                        <Link to=\"/\">\r\n                          <span className=\"sr-only\">Workflow</span>\r\n                          <img\r\n                          alt=\"something\"\r\n                            className=\"h-8 w-auto sm:h-10\"\r\n                            src={logo}                          />\r\n                        </Link>\r\n                        <div className=\"-mr-2 flex items-center md:hidden\">\r\n                          <Popover.Button className=\"bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-gray-100\">\r\n                            <span className=\"sr-only\">Open main menu</span>\r\n                            <MenuIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n                          </Popover.Button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"hidden md:block md:ml-10 md:pr-4 md:space-x-8\">\r\n                      {navigation.map((item) => (\r\n                        <Link key={item.name} to={item.to} className=\"font-medium text-gray-300 hover:text-gray-400\">\r\n                          {item.name}\r\n                        </Link>\r\n                      ))}\r\n                      <Link to=\"/SignIn\" className=\"font-medium text-gray-500 hover:text-gray-400\">\r\n                        Log in\r\n                      </Link>\r\n                    </div>\r\n                  </nav>\r\n                </div>\r\n\r\n                <Transition\r\n                  show={open}\r\n                  as={Fragment}\r\n                  enter=\"duration-150 ease-out\"\r\n                  enterFrom=\"opacity-0 scale-95\"\r\n                  enterTo=\"opacity-100 scale-100\"\r\n                  leave=\"duration-100 ease-in\"\r\n                  leaveFrom=\"opacity-100 scale-100\"\r\n                  leaveTo=\"opacity-0 scale-95\"\r\n                >\r\n                  <Popover.Panel\r\n                    focus\r\n                    static\r\n                    className=\"absolute top-0 inset-x-0 p-2 transition transform origin-top-right md:hidden\"\r\n                  >\r\n                    <div className=\"rounded-lg shadow-md bg-white ring-1 ring-black ring-opacity-5 overflow-hidden\">\r\n                      <div className=\"px-5 pt-4 flex items-center justify-between\">\r\n                        <div>\r\n                          <img\r\n                            className=\"h-8 w-auto\"\r\n                            src={logo}\r\n                            alt=\"\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"-mr-2\">\r\n                          <Popover.Button className=\"bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-gray-100\">\r\n                            <span className=\"sr-only\">Close main menu</span>\r\n                            <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n                          </Popover.Button>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"px-2 pt-2 pb-3 space-y-1\">\r\n                        {navigation.map((item) => (\r\n                          <Link\r\n                            key={item.name}\r\n                            to={item.to}\r\n                            className=\"block px-3 py-2 rounded-md text-base font-medium text-gray-300 hover:text-gray-400 hover:bg-gray-50\"\r\n                          >\r\n                            {item.name}\r\n                          </Link>\r\n                        ))}\r\n                      </div>\r\n                      <Link\r\n                        to=\"/SignIn\"\r\n                        className=\"block w-full px-5 py-3 text-center font-medium text-gray-400 bg-gray-50 hover:bg-gray-100\"\r\n                      >\r\n                        Log in\r\n                      </Link>\r\n                    </div>\r\n                  </Popover.Panel>\r\n                </Transition>\r\n              </>\r\n            )}\r\n          </Popover>\r\n\r\n          <main className=\"mt-10 mx-auto max-w-7xl px-4 sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28\">\r\n            <div className=\"sm:text-center lg:text-left\">\r\n              <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-400 sm:text-5xl md:text-6xl\">\r\n                <span className=\"block xl:inline\">Hero Section Text</span>{' '}\r\n                <span className=\"block text-Blue-500 xl:inline\">Something...</span>\r\n              </h1>\r\n              <p className=\"mt-3 text-base text-gray-400 sm:mt-5 sm:text-lg sm:max-w-xl sm:mx-auto md:mt-5 md:text-xl lg:mx-0\">\r\n                Anim aute id magna aliqua ad ad non deserunt sunt. Qui irure qui lorem cupidatat commodo. Elit sunt amet\r\n                fugiat veniam occaecat fugiat aliqua.\r\n              </p>\r\n              <div className=\"mt-5 sm:mt-8 sm:flex sm:justify-center lg:justify-start\">\r\n                <div className=\"rounded-md shadow\">\r\n                  {/* \r\n                  <Link\r\n                    to=\"/\"\r\n                    className=\"w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-white bg-gray-600 hover:bg-gray-700 md:py-4 md:text-lg md:px-10\"\r\n                  >\r\n                    Get started\r\n                  </Link>\r\n                </div>\r\n                <div className=\"mt-3 sm:mt-0 sm:ml-3\">\r\n                  <Link\r\n                    to=\"/\"\r\n                    className=\"w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-gray-700 bg-gray-100 hover:bg-gray-200 md:py-4 md:text-lg md:px-10\"\r\n                  >\r\n                    button\r\n                  </Link>\r\n                  */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n      <div className=\"lg:absolute lg:inset-y-0 lg:right-0 lg:w-1/2\">\r\n        <img\r\n          className=\"h-56 w-full object-cover sm:h-72 md:h-96 lg:w-full lg:h-full\"\r\n          src=\"https://images.unsplash.com/photo-1542641728-6ca359b085f4?ixlib=rb-1.2.1\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}","\r\n\r\nimport React from 'react';\r\n\r\nconst Card = (props) => {\r\n\r\n    return (\r\n\r\n     \r\n            <div className=\"overflow-hidden shadow-lg rounded-lg h-90 w-60 md:w-80 cursor-pointer m-auto\">\r\n                <a href=\"/\" className=\"w-full block h-full\">\r\n\r\n                    <img alt=\"blog \" src=\"https://images.unsplash.com/photo-1455894127589-22f75500213a?ixlib=rb-1.2.1\" className=\"max-h-40 w-full object-cover\" />\r\n                    <div className=\"bg-white dark:bg-gray-800 w-full p-4\">\r\n                        <p className=\"text-gray-300 text-md font-medium\">\r\n                            {props.data.category.name}\r\n                        </p>\r\n                        <p className=\"text-gray-500 dark:text-white text-xl font-medium mb-2\">\r\n                            {props.data.name}\r\n                        </p>\r\n                        <p className=\"text-gray-400 dark:text-gray-300 font-light text-md\">\r\n                            {props.data.category.description.substring(0, 100)}\r\n                        </p>\r\n                        <div className=\"flex items-center mt-4\">\r\n                            <div href=\"/\" className=\"block relative\">\r\n                                <img alt=\"profil\" src=\"https://images.unsplash.com/photo-1455894127589-22f75500213a?ixlib=rb-1.2.1\" className=\"mx-auto object-cover rounded-full h-10 w-10 \" />\r\n                            </div>\r\n                            <div className=\"flex flex-col justify-between ml-4 text-sm\">\r\n                                <p className=\"text-gray-800 dark:text-white\">\r\n                                    Jean Jacques\r\n                                </p>\r\n                                <p className=\"text-gray-400 dark:text-gray-300\">\r\n                                    20 mars 2029 - 6 min read\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </a>\r\n            </div>\r\n \r\n\r\n    )\r\n\r\n};\r\n\r\nexport default Card;","const Loader = () => {\r\n    let circleCommonClasses = 'h-2.5 w-2.5 bg-current   rounded-full';\r\n\r\n    return (\r\n        <div className='flex justify-center'>\r\n            <div className={`${circleCommonClasses} mr-1 animate-bounce`}></div>\r\n            <div\r\n                className={`${circleCommonClasses} mr-1 animate-bounce200`}\r\n            ></div>\r\n            <div className={`${circleCommonClasses} animate-bounce400`}></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;","import React, { useState, useEffect } from 'react';\r\n\r\nimport Card from './Components/Card';\r\nimport Loader from './Components/Loader';\r\n\r\n\r\n\r\n/*\r\nexport default function Business() {\r\n    const [response, loading, hasError] = useFetch(\"https://dotnet-webapi.herokuapp.com/v1/business\")\r\n\r\n\r\n    \r\n    return (\r\n        <>\r\n            {loading ? <div>Loading...</div> : (hasError ? <div>Error occured.</div> : (response.map((data, index) => <div key={index}>{data.name}</div>)))}\r\n        </>\r\n    )\r\n}\r\n\r\n*/\r\nconst Business = () => {\r\n    const [hasError, setErrors] = useState(false);\r\n    const [business, setBusiness] = useState([]);\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    async function fetchData() {\r\n        const res = await fetch(\"https://dotnet-webapi.herokuapp.com/v1/business\");\r\n        res\r\n            .json()\r\n            .then(res => {\r\n                setBusiness(res)\r\n                setLoading(false)\r\n            })\r\n            .catch(err => setErrors(err));\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"container my-12 mx-auto px-4 md:px-12\">\r\n\r\n                <div className=\"flex text-gray-500  justify-center\">\r\n                    <Loader />\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n    if (hasError) {\r\n        return (\r\n\r\n            <div className=\"container my-12 mx-auto px-4 md:px-12\">\r\n                <div><p className=\"text-2xl font-light text-gray-400\">\r\n                    Error occured Loading Data :/\r\n                </p></div>\r\n            </div>\r\n\r\n        )\r\n\r\n    } else {\r\n\r\n        const Cards = ((\r\n            business.map((data, index) =>\r\n                <div key={index}>\r\n                    <Card data={data} />\r\n                </div>)))\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"container my-12 mx-auto px-4 md:px-12\">\r\n                <div className=\"w-full bg-white p-12 \">\r\n                    <div className=\"header flex items-end  mb-12\">\r\n                        <div className=\"title\">\r\n                            <p className=\"text-4xl font-bold text-gray-800 mb-4\">\r\n                                Data From Endpoint\r\n                            </p>\r\n                            <p className=\"text-2xl font-light text-gray-400\">\r\n                                All data are verified by https://dotnet-webapi.herokuapp.com/v1/business\r\n                            </p>\r\n                        </div>\r\n                    </div> </div>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-12 \">\r\n                    {Cards}\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n\r\n    }\r\n    /*\r\n        return ( */\r\n    /*   <div>\r\n           <span>{JSON.stringify(business)}</span>\r\n           <hr />\r\n           <span>Has error: {JSON.stringify(hasError)}</span>\r\n           <hr />\r\n           <span>Loading: {JSON.stringify(loading)}</span>\r\n       </div> */\r\n    /*\r\n<div> \r\n{business.map(joke => \r\n    <div key={joke.id}> {joke.name} </div>)}\r\n</div>\r\n*/\r\n\r\n\r\n    //  <div className=\"container my-12 mx-auto px-4 md:px-12\">\r\n    //    <div className=\"flex flex-wrap -mx-1 lg:-mx-4\">\r\n\r\n\r\n\r\n\r\n\r\n    /*\r\n            <div className=\"w-full bg-white p-12 \">\r\n                <div className=\"header flex items-end  mb-12\">\r\n                    <div className=\"title\">\r\n                        <p className=\"text-4xl font-bold text-gray-800 mb-4\">\r\n                            Lastest articles\r\n                        </p>\r\n                        <p className=\"text-2xl font-light text-gray-400\">\r\n                            All article are verified by 2 experts and valdiate by the CTO\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n    \r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-12 \">\r\n    \r\n                    {hasError ? <div>Error occured.</div>  : \r\n                      \r\n                      (loading ? <div className=\"flex text-gray-500  justify-center\"> <Loader />\r\n    \r\n                      </div> :\r\n               (\r\n    \r\n                             business.map((data, index) => <div key={index}>\r\n    \r\n                                <Card data={data} />\r\n                            </div>)\r\n    \r\n               )\r\n                          \r\n                       \r\n    \r\n                    )}\r\n    \r\n                </div>\r\n            </div>\r\n    \r\n    \r\n    \r\n    \r\n    */\r\n\r\n\r\n    //  );\r\n};\r\nexport default Business;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst people = [\r\n  {\r\n    name: 'Jane Cooper',\r\n    title: 'Regional Paradigm Technician',\r\n    department: 'Optimization',\r\n    role: 'Admin',\r\n    email: 'jane.cooper@example.com',\r\n    image:\r\n      'https://images.unsplash.com/photo-1557855506-3619a44bab73?ixid=MnwyMjIwNDh8MHwxfGNvbGxlY3Rpb258OHwxODM2NjgwNHx8fHx8Mnx8MTYyMzk2NTM2MQ&ixlib=rb-1.2.1',\r\n  },\r\n  // More people...\r\n]\r\n\r\nfunction PostRequestHooks() {\r\n  const [articleId, setArticleId] = useState(null);\r\n  const [categories, setCategories] = useState([]);\r\n  useEffect(() => {\r\n\r\n    axios\r\n    .get('https://dotnet-webapi.herokuapp.com/v1/categories/')\r\n    .then(response => setCategories(response.data));\r\n\r\n  }, []);\r\n  /*\r\n    useEffect(() => {\r\n      // POST request using axios inside useEffect React hook\r\n      const article = {\r\n  \r\n        name: \"TesteReact\",\r\n        description: \"string\",\r\n        mobilePhone: \"string\",\r\n        categoryId: 1\r\n  \r\n      };\r\n      axios\r\n        .post('https://dotnet-webapi.herokuapp.com/v1/business/', article)\r\n        .then(response => setArticleId(response.data.id));\r\n  \r\n      // empty dependency array means this effect will only run once (like componentDidMount in classes)\r\n    }, []);\r\n  */\r\n  return (\r\n    /* <div className=\"card text-center m-3\">\r\n       <h5 className=\"card-header\">POST Request with React Hooks</h5>\r\n       <div className=\"card-body\">Returned Id: {articleId}</div>\r\n     </div>*/\r\n    <div className=\"container my-12 mx-auto px-4 md:px-12 justify-center\">\r\n      <div className=\"flex flex-col\">\r\n        <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\r\n          <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\r\n            <div className=\"shadow overflow-hidden border-b border-gray-100 sm:rounded-lg\">\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th\r\n                      scope=\"col\"\r\n                      className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\"\r\n                    >\r\n                      Name\r\n                    </th>\r\n                    <th\r\n                      scope=\"col\"\r\n                      className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\"\r\n                    >\r\n                      Description\r\n                    </th>\r\n\r\n                    <th scope=\"col\" className=\"relative px-6 py-3\">\r\n                      <span className=\"sr-only\">Edit</span>\r\n                    </th>\r\n                    <th scope=\"col\" className=\"relative px-6 py-3\">\r\n                      <span className=\"sr-only\">Remove</span>\r\n                    </th>\r\n\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {categories.map((item) => (\r\n                    <tr key={item.id}>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"flex items-center\">\r\n                          <div className=\"flex-shrink-0 h-10 w-10\">\r\n                            {/*  <img className=\"h-10 w-10 rounded-full\" src={person.image} alt=\"\" />*/}\r\n                          </div>\r\n                          <div className=\"ml-4\">\r\n                            <div className=\"text-sm font-medium text-gray-300\">{item.name}</div>\r\n                            <div className=\"text-sm text-gray-400\">{item.id}</div>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                       {/* <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">\r\n                          Active\r\n                        </span> */}\r\n                        <div className=\"text-sm text-gray-400\">{item.description.substring(0, 100) } ...</div>\r\n                      </td>\r\n\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                        <Link to=\"/\" className=\"text-gray-300 hover:text-gray-600\">\r\n                          Edit\r\n                        </Link>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                        <Link to=\"/\" className=\"text-gray-300 hover:text-gray-600\">\r\n                          Delete\r\n                        </Link>\r\n                      </td>\r\n\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { PostRequestHooks };\r\n","\nimport './App.css';\nimport React from \"react\";\nimport Hero from \"./Components/Hero\";\nimport Business from './Business';\nimport { PostRequestHooks } from './PostRequestHooks';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Navbar />\n     <header classNameName=\"App-header\">\n        <img src={logo} classNameName=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          classNameName=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n  </header> */}\n\n\n<Business/>\n\n    </div>\n  );\n}\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }\r\n  ","/*\r\n  This example requires Tailwind CSS v2.0+ \r\n  \r\n  This example requires some changes to your config:\r\n  \r\n  ```\r\n  // tailwind.config.js\r\n  module.exports = {\r\n    // ...\r\n    plugins: [\r\n      // ...\r\n      require('@tailwindcss/forms'),\r\n    ]\r\n  }\r\n  ```\r\n*/\r\nimport React, { Component } from 'react';\r\nimport { LockClosedIcon } from '@heroicons/react/solid'\r\nimport logo from './imgs/React-icon.svg';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default class  SignIn extends Component {\r\n\r\n\r\n    handleSubmit =  e  => {\r\n\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n          \r\n            \r\n            username: \"batman\",\r\n            password: \"batman\",\r\n            \r\n            \r\n            \r\n        }\r\n    /*    const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body:data,\r\n            mode: 'no-cors'\r\n        };\r\n        */\r\n/*\r\n        axios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\r\n        axios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\r\n\r\n        axios.post(\"https://dotnet-webapi.herokuapp.com/v1/account/login\", data)\r\n            .then(res => { console.log(res) })\r\n            .catch(err => { console.log(err) })\r\n            */\r\n/*\r\n          const res =  fetch('https://dotnet-webapi.herokuapp.com/v1/account/login', requestOptions)\r\n            .then(res => { console.log(res) })\r\n            .catch(err => { console.log(err) })\r\n            */\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: {\"Content-Type\": \"application/json; charset=utf8\"},\r\n                \r\n                body:data,\r\n                Credential: 'include',\r\n\r\n                mode: 'no-cors'\r\n              \r\n            };\r\n\r\n             fetch(\"https://dotnet-webapi.herokuapp.com/v1/account/login\",requestOptions)\r\n            .then(res => { console.log(res) })\r\n            .catch(err => { console.log(err) })\r\n        };\r\n\r\nrender(){\r\n        return (\r\n            <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n                <div className=\"max-w-md w-full space-y-8\">\r\n                    <div>\r\n                        <img\r\n                            className=\"mx-auto h-12 w-auto\"\r\n                            src={logo}\r\n                            alt=\"Workflow\"\r\n                        />\r\n                        <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Sign in to your account</h2>\r\n\r\n                    </div>\r\n                    <form className=\"mt-8 space-y-6\" onSubmit={this.handleSubmit}>\r\n                        <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\r\n                        <div className=\"rounded-md shadow-sm -space-y-px\">\r\n                            <div>\r\n                                <label htmlFor=\"email-address\" className=\"sr-only\">\r\n                                    Email address\r\n                                </label>\r\n                                <input\r\n                                    id=\"email-address\"\r\n                                    name=\"email\"\r\n                                    type=\"username\"\r\n                                    autoComplete=\"email\"\r\n                                    required\r\n                                    className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                                    placeholder=\"Email address\"\r\n                                    onChange={e => this.username = e.target.value}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"password\" className=\"sr-only\">\r\n                                    Password\r\n                                </label>\r\n                                <input\r\n                                    id=\"password\"\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                    required\r\n                                    className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                                    placeholder=\"Password\"\r\n                                    onChange={e => this.password = e.target.value}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"flex items-center justify-between\">\r\n                            <div className=\"flex items-center\">\r\n                                <input\r\n                                    id=\"remember_me\"\r\n                                    name=\"remember_me\"\r\n                                    type=\"checkbox\"\r\n                                    className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\r\n                                />\r\n                                <label htmlFor=\"remember_me\" className=\"ml-2 block text-sm text-gray-900\">\r\n                                    Remember me\r\n                                </label>\r\n                            </div>\r\n\r\n                            <div className=\"text-sm\">\r\n                                <a href=\"/\" className=\"font-medium text-gray-600 hover:text-gray-500\">\r\n                                    Forgot your password?\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-gray-600 hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                            >\r\n                                <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\r\n                                    <LockClosedIcon className=\"h-5 w-5 text-gray-500 group-hover:text-gray-400\" aria-hidden=\"true\" />\r\n                                </span>\r\n                                Sign in\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport  App  from './App.js';\r\nimport Hero from \"./Components/Hero\";\r\nimport SignIn from \"./SignIn\";\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { PostRequestHooks } from './PostRequestHooks.js';\r\n\r\nexport const Routes = () => {\r\n  return (\r\n    <div>\r\n      <Hero />\r\n      <Switch>\r\n        <Route exact path=\"/Home\" component={App} />\r\n        <Route exact path=\"/\">\r\n          <Redirect to=\"/Home\" />\r\n        </Route>\r\n        <Route exact path=\"/SignIn\" component={SignIn} />\r\n        <Route exact path=\"/Categories\" component={PostRequestHooks} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\n\nimport { Routes } from './routes'; // where we are going to specify our routes\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App /> */}\n    <Router>\n    <Routes />\n  </Router>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\nreportWebVitals(console.log);\n"],"sourceRoot":""}